@require '../../_通用变量集_'
@require './可重用代码块之集'

// Stylus 语言的变量名不允许采用汉字！





// 【基础】。
// 如果 wlc_transfer_items_among_columns__identifiable_selector__base_styles_wrapper 不是空白或 `&`，
// 亦即故意将基础样式之定义套在根元素之内，
// 则以防污染全局的样式定义。
{wlc_transfer_items_among_columns__identifiable_selector__base_styles_wrapper} {

    kbd {
        font-family 'Cascadia Code', 'PT Mono', 'consolas', 'Courier New', Courier, 'Microsoft Yahei UI', 'Microsoft Yahei', '微软雅黑', monospace
        border-radius 0.25em
        text-shadow none
        font-weight 300

        if false {
            color #fff
            border-color #fff
            background-color #789abc
            box-shadow 1px 1px 1px 0 rgba(0, 0, 0, 0.219)
        } else {
            color black;
            border-color #bbb #ddd #ddd #bbb
            background-color #fff
            background-image linear-gradient(45deg, white, #eee)
            box-shadow 0em 0.15em 0 0.05em #bbb
        }
    }

    label.包裹着输入项,
    .勾选项视觉假体,
    textarea,
    input,
    button {
        MIXIN_transition_colors_and_shades()
    }

    label.包裹着输入项 {
        outline-color transparent
        box-shadow none

        &:focus-visible,
        &:focus-within {
            outline-color 'var(%s)' % unquote(wlc_transfer_items_among_columns__css_var_name__focusing_element_outline_color)
            box-shadow 0 0 0 ('calc(var(%s) - 1px)' % unquote(wlc_transfer_items_among_columns__css_var_name__focusing_element_outline_width)) ('var(%s)' % unquote(wlc_transfer_items_among_columns__css_var_name__focusing_element_outline_color))
        }
    }

    textarea,
    input,
    button {
        outline-color transparent
        box-shadow none

        &:focus-visible {
            outline-color 'var(%s)' % unquote(wlc_transfer_items_among_columns__css_var_name__focusing_element_outline_color)
            box-shadow 0 0 0 ('calc(var(%s) - 1px)' % unquote(wlc_transfer_items_among_columns__css_var_name__focusing_element_outline_width)) ('var(%s)' % unquote(wlc_transfer_items_among_columns__css_var_name__focusing_element_outline_color))
        }
    }

    textarea,
    input {

        &::placeholder {
            color #ccc
        }
    }

    input {
        border-radius 1000px
    }

    input[type="button"],
    button {
        color #000
        border-color #666
        background-color #eee
        opacity 1

        &:hover {
            color #fff
            border-color #0003
            background-color 'var(%s)' % unquote(wlc_transfer_items_among_columns__css_var_name__element_highlighting_color_static)
        }

        &:disabled {
            opacity 0.15
            color @color
            border-color #ddd
            background-color @background-color
        }
    }

    input[type="checkbox"] {
        color inherit
        width 1.25em
        height @width
        border-color currentColor
    }

    // input[type="checkbox"]:hover,
    .输入项-勾选项:hover .勾选项视觉假体,
    label.包裹着输入项:hover .输入项-勾选项 .勾选项视觉假体 {
        // color 'var(%s)' % unquote(wlc_transfer_items_among_columns__css_var_name__element_non_highlighting_color_hover)
        color 'var(%s)' % unquote(wlc_transfer_items_among_columns__css_var_name__element_highlighting_color_static)
    }

    // input[type="checkbox"]:checked,
    .输入项-勾选项.已勾选 .勾选项视觉假体 {
        color white
        // background-color black
        background-color 'var(%s)' % unquote(wlc_transfer_items_among_columns__css_var_name__element_highlighting_color_static)
        border-color @background-color
    }

    // input[type="checkbox"]:checked:hover,
    .输入项-勾选项.已勾选:hover .勾选项视觉假体,
    label.包裹着输入项:hover .输入项-勾选项.已勾选 .勾选项视觉假体 {
        color white
        background-color 'var(%s)' % unquote(wlc_transfer_items_among_columns__css_var_name__element_highlighting_color_hover)
        border-color @background-color
    }

    .输入项-勾选项 {

        & {

            .勾选项视觉假体 {
                border-radius 0.2em
                background-color white
            }
        }

        &.已部分勾选 {

            .勾选项视觉假体::before {
                border-radius 0.1em
                background-color currentColor
            }
        }
    }

    label.包裹着输入项 {

        & {
            color inherit
            border-radius 0.2em

            input[type="checkbox"]:focus-visible,
            input[type="checkbox"]:focus {
                outline none
                box-shadow none
            }

            .输入项配文 {
                color inherit
            }
        }

        &:hover {
            background-color rgba(black, 0.079)
        }

        &:disabled,
        &.已禁止交互 {
            color #0004
            border-color transparent
            background-color transparent
        }
    }

    .角标 {

        &,
        &.标准配色-红 {
            border-radius 1000px
            color white
            background-color red
            box-shadow 1px 1px 0.2em rgba(#722, 0.319)
        }

        // &.标准配色-绿 {

        // }

        // &.标准配色-蓝 {

        // }
    }

    .消息文本块 {
        border-radius 0.4em

        @supports (backdrop-filter blur(32px)) {
            backdrop-filter blur(32px)

            &.磨砂玻璃效果-弱 {
                backdrop-filter blur(8px)
            }

            &.磨砂玻璃效果-无 {
                backdrop-filter none
            }
        }

        MIXIN_background_effects(background_color_base_value = white) {
            background-color rgba(background_color_base_value, 0.96)
            box-shadow 0 0 0.4em rgba(black, 0.319)

            @supports (backdrop-filter blur(32px)) {
                background-color rgba(background_color_base_value, 0.66)
                box-shadow 0 0 0.4em rgba(black, 0.19)

                &.磨砂玻璃效果-弱 {
                    background-color rgba(background_color_base_value, 0.91)
                    box-shadow 0 0 0.4em rgba(black, 0.219)
                }

                &.磨砂玻璃效果-无 {
                    background-color @background-color
                    box-shadow @box-shadow
                }
            }
        }

        em,
        strong {
            border-radius 0.15em
        }

        &,
        &.标准配色-亮 {
            MIXIN_background_effects(white)

            color #000
            border-color #222

            em,
            strong {
                text-shadow 0 0 0.75px #0009
            }

            em {
                // color #66e
                // background-color #ddf
                background-color #fd96
            }

            strong {
                // color #f44
                // background-color #fcc
                background-color #f555
            }

            .消息文本-可滚动的内容皿 {
                MIXIN_webkit_scrollbar(black, 1.25)
                scrollbar-width thin
            }
        }

        &.标准配色-暗 {
            MIXIN_background_effects(black)

            color #ccc
            border-color black

            em,
            strong {
                text-shadow none
            }

            em_and_strong_should_use_highlighter_pen_style = true

            em {
                if em_and_strong_should_use_highlighter_pen_style {
                    color white
                    // background-color #44b
                    background-color #eb57
                } else {
                    color #99e
                    background-color transparent
                }
            }

            strong {
                if em_and_strong_should_use_highlighter_pen_style {
                    color white
                    // background-color #b44
                    background-color #f338
                } else {
                    color #f88
                    background-color transparent
                }
            }

            .消息文本-可滚动的内容皿 {
                MIXIN_webkit_scrollbar(white, 1.25)
                // scrollbar-width thin
            }
        }
    }
}
