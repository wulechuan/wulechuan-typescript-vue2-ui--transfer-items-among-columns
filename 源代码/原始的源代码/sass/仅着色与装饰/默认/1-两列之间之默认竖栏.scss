// 在 SCSS 代码中，下述开关：
//     /* autoprefixer: off */
// 不应放在文件【根作用域】中。
// 这是因为，本项目中的诸 .scss 文件，均可能由外界逐个挑选采用。
// 故而，在外界的某 .scss 文件中，会顺次导入本项目的若干各 .scss 文件。
// 此时，如果本项目的每个 .scss 文件根均带有 autoprefixer 开关，不论其取值为 on 或 off
// 那么 SCSS 编译器都会任务最终拼合的那个外界的 .scss 文件中，
// 其【根作用域】中出现过多个 autoprefixer 开关项。
// 进而， SCSS 编译器会在命令行窗口中不厌其烦的打印警告信息。
// 妥协的做法如下：
//     逐个在每个“非根”作用域中添加 autoprefixer 开关项。
//     例如 @mixin 定义块内、某个 css 规则内，等等。
//
// 顺便提及， Stylus 语言的代码中如果均在文件【根作用域】放置 autoprefixer 开关项，却不会有上述问题。
// 这证明，即便在第三方的 .styl 文件中顺次导入多个 .styl 文件，这些被导入的 .styl 文件仍保留各自独立的【根作用域】。





@import '../../_通用变量集_';
@import './通用代码块之集';





@mixin 可照搬之代码块_两列之间之默认竖栏_仅着色与装饰() {
    /* autoprefixer: off */

    // 【两列之间之默认竖栏】。
    #{$吴乐川_任意两列间转移条目__标志性选择器__default_center_column_between_2_list_columns__root} {
        @if true {
            border-color: transparent;
        } @else {
            border-color: #333;
            background-color: #999;
        }
    }
}

@if $吴乐川_任意两列间转移条目__标志性选择器__本部件专属样式之外层包裹 != null {
    #{$吴乐川_任意两列间转移条目__标志性选择器__本部件专属样式之外层包裹} {
        @include 可照搬之代码块_两列之间之默认竖栏_仅着色与装饰();
    }
} @else {
    @include 可照搬之代码块_两列之间之默认竖栏_仅着色与装饰();
}
